# deployment file created after running kompose convert -f docker-compose.yml

# Web deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.36.0 (ae2a39403)
  labels:
    io.kompose.service: web
  name: web
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: web
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.36.0 (ae2a39403)
      labels:
        io.kompose.service: web
    spec:
      containers:
        - args:
            - sh
            - -c
            - sleep 10 && python manage.py migrate && python manage.py runserver 0.0.0.0:8000
          envFrom:
            - configMapRef:
                name: env
          image: messaging_app
          imagePullPolicy: Never 
          name: messaging-app
          ports:
            - containerPort: 8000
              protocol: TCP
          resources:
            limits:
              cpu: "500m"
              memory: "128Mi"
            requests:
              cpu: "250m"
              memory: "64Mi"
      restartPolicy: Always

---
# Web service
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.36.0 (ae2a39403)
  labels:
    io.kompose.service: web
  name: web
spec:
  ports:
    - name: "8000"
      port: 8000
      targetPort: 8000
  selector:
    io.kompose.service: web
  type: NodePort    


---
# Db Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.36.0 (ae2a39403)
  labels:
    io.kompose.service: db
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: db
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.36.0 (ae2a39403)
      labels:
        io.kompose.service: db
    spec:
      containers:
        - env:
            - name: MYSQL_DATABASE
              value: ALX_message_app
            - name: MYSQL_PASSWORD
              value: alx_password
            - name: MYSQL_ROOT_PASSWORD
              value: root_pass
            - name: MYSQL_USER
              value: alx_user
          image: mysql:latest
          name: messaging-app-db
          ports:
            - containerPort: 3306
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-data
      restartPolicy: Always
      volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-data


---
# DB service
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.36.0 (ae2a39403)
  labels:
    io.kompose.service: db
  name: db
spec:
  ports:
    - name: "3306"
      port: 3306
      targetPort: 3306
  selector:
    io.kompose.service: db

---
# Volume persistence
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: mysql-data
  name: mysql-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi


---
# Env conf map
apiVersion: v1
data:
  MYSQL_DATABASE: ALX_message_app
  MYSQL_HOST: db
  MYSQL_PASSWORD: alx_password
  MYSQL_ROOT_PASSWORD: root_pass
  MYSQL_USER: alx_user
kind: ConfigMap
metadata:
  labels:
    io.kompose.service: web-env
  name: env
